Problem Statement
There is a graph with N vertices v_1, …, v_N on the left, and N + 1 vertices u_1, …, u_N + 1 on the right. Each vertex v_i (1 ≤i ≤N) is connected to each vertex u_j (1 ≤j ≤N + 1), that is, the graph contains N(N + 1) edges.

We color every edge with one of the N colors 1, …, N. A coloring is suitable if for each k = 1, …, N there are exactly 2k edges of color k, and those edges form a simple path.

Formally, for each k = 1, …, N there should exist a sequence of distinct vertices w_0, …, w_2k such that all of the following is true:

For each i = 0, …, 2k - 1, vertices w_i and w_i + 1 are connected with an edge of color k,
No other edges of color k exist.


Find any suitable coloring, or determine that it doesn't exist.

For each input file, solve T test cases.

Constraints
1 ≤T ≤100
1 ≤N ≤100


Input
Input is given from Standard Input in the following format:

T
case_1
case_2
⋮case_T


Each case is in the following format:

N


Output
For each test case, if a suitable coloring does not exist, print No. Otherwise, print a suitable coloring description in the following format:

Yes
C_1, 1 C_1, 2 …C_1, N + 1
⋮C_N, 1 C_N, 2 …C_N, N + 1


Here, C_i, j is the color of the edge between v_i and u_j.

If there are many suitable colorings, print any of them.

Sample Input 1
2
1
2


Sample Output 1
Yes
1 1
No
